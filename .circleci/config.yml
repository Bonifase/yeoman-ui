version: 2.1 # use CircleCI 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.17.0

jobs: # a collection of steps
  setup:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "backend/package.json" }}-{{ checksum "frontend/package.json" }}
  build-test-frontend:
    <<: *defaults  
    steps:
      working_directory: frontend
      - run:
          name: install frontend
          command: npm install
      - run:
          name: build frontend
          command: npm run build
      # - run:
      #     name: test frontend
      #     command: npm run test
      - persist_to_workspace:
          root: ~/repo
          paths: .
  build-test-backend:
    <<: *defaults  
    steps:
      - attach_workspace:
          at: ~/repo
      working_directory: backend
      - run:
          name: install backend
          command: npm install
      - run:
          name: build backend
          command: npm run webpack-prod
      - run:
          name: test backend 
          command: npm run test
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "backend/package.json" }}-{{ checksum "frontend/package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: test-results.xml
          prefix: tests
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: compile for package
          command: cd backend && npm run compile-dist
      - run:
          name: copy frontend to dist
          command: cd backend && rm -rf dist/media && cp -r ../frontend/dist/ ./dist/media/
      - run:
          name: copy LICENSE file
          command: cp LICENSE ./backend/LICENSE
      - run:
          name: prune npm for production
          command: cd backend && npm prune --production
      - run:
          name: bump package.json version
          command: cd backend && npm version patch
      - run:
          name: create .vsix
          command: cd backend && npx vsce package .
      - run:
          name: clean LICENSE file
          command: rm backend/LICENSE
      - run:
          name: clean LICENSE file
          command: rm backend/LICENSE
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
      - build-test-frontend:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build-test-backend:
          requires:
            - build-test-frontend
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-test-backend
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
